name: Manage PRs modifying .github directory

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  manage-pr:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Fetch all branches
        run: git fetch
      
      - name: Get changed files
        run: |
          BASE_BRANCH=${{ github.event.pull_request.base.ref }}
          HEAD_BRANCH=${{ github.event.pull_request.head.ref }}
          echo "Comparing $BASE_BRANCH with $HEAD_BRANCH"
          # Ensure we are on the HEAD branch
          git checkout $HEAD_BRANCH
          # Get the list of changed files
          CHANGED_FILES=$(git diff --name-only origin/$BASE_BRANCH $HEAD_BRANCH)
          echo "Changed Files: $CHANGED_FILES"
          echo "BASE_BRANCH=$BASE_BRANCH" >> $GITHUB_ENV
          echo "HEAD_BRANCH=$HEAD_BRANCH" >> $GITHUB_ENV
        shell: bash
        
      - name: Check for changes in .github directory
        id: check_changes
        run: |
          if git diff --name-only origin/${{ github.event.pull_request.base.ref }} ${{ github.event.pull_request.head.ref }} | grep -q '^.github/'; then
            echo "changes_detected=true" >> $GITHUB_ENV
          else
            echo "changes_detected=false" >> $GITHUB_ENV
          fi

      - name: Install GitHub CLI
        run: sudo apt-get install gh -y
        
      # - name: Comment and close PR if unauthorized changes detected
      #   if: ${{ env.changes_detected == 'true' }}
      #   run: |
      #     gh auth login --with-token < ${{ secrets.GH_TOKEN }}
      #     gh pr review ${{ github.event.pull_request.number }} -r --body "This PR modifies files in the .github directory, which is not allowed. Please remove these changes."
      #     gh pr comment ${{ github.event.pull_request.number }} --body "This PR modifies files in the .github directory, which is not allowed. Closing the PR automatically."
      #     gh pr close ${{ github.event.pull_request.number }}
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          
      - name: print env
        run: |
          echo ${{ env.BASE_BRANCH }}
          echo ${{ env.HEAD_BRANCH }}
          echo ${{ env.changes_detected }}
